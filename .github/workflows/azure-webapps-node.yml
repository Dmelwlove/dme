#当提交被推送到默认分支时，这个工作流将构建node.js应用程序并推送到Azure Web应用程序。
#
#这个工作流假设您已经创建了目标Azure App Service web App。
#有关说明，请参阅https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
#配置此工作流：
#
#1。下载Azure Web应用程序的发布概要文件。您可以从Azure门户中Web应用程序的Overview页面下载该文件。
#了解更多信息：https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
#2。在存储库中创建一个名为AZURE_WEBAPP_PUBLISH_PROFILE的secret，将PUBLISH PROFILE内容粘贴为secret的值。
#有关获取发布概要文件的说明，请参阅：https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
#3。更改AZURE_WEBAPP_NAME的值。还可以更改AZURE_WEBAPP_PACKAGE_PATH和NODE_VERSION环境变量。
#
#有关Azure的GitHub操作的更多信息：https://GitHub.com/Azure/Actions
#有关Azure Web Apps部署操作的更多信息：https://github.com/Azure/webapps-Deploy
#了解更多示例以开始GitHub Action工作流部署到Azure：https://GitHub.com/Azure/actions-workflow-samples

在:
推:
分支: [ "main" ]
query为空workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    #将其设置为应用程序的名称
  AZURE_WEBAPP_PACKAGE_PATH: '.'      #将其设置为web app项目的路径，默认为存储库根目录
  NODE_VERSION: '14.x'                #将其设置为要使用的节点版本

权限:
内容: 阅读

工作:
建筑:
    runs-on: ubuntu-latest
步骤:
    - uses: actions/checkout@v3

    - name: Set up Node.js
-用途：actions/checkout@v3: actions/setup-node@v3
-name：设置Node.js:
actions/checkout@v3
权限: 'npm'

设置Node.js
内容：无: |
-name:npm安装、构建和测试
运行：|
npm安装

actions/setup-node@v3
$
内容:
npm安装、构建和测试
内容：无: .

必须:
运行：ubuntu-:
上传部署作业构件
actions/upload-artifact@v3
node-app
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
